syntax = 'proto3';

package order.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/materials-resources/s_prophet/internal/core/model/order_v1alpha0";

message Address {
  double id = 1;
  string name = 2;
  string line_one = 3;
  string line_two = 4;
  string city = 5;
  string state = 6;
  string postal_code = 7;
  string country = 8;
}
message Customer {
  double id = 1;
  string name = 2;
  string phone_number = 3;
  string email = 4;
}

message CustomerContact {
  string id = 1;
  string name = 3;
  string phone_number = 4;
  string email = 5;
  string title = 6;
}

message BasicOrder {
  string id = 1;
  string status = 2;
  string taker = 3;
  string purchase_order = 4;
  google.protobuf.Timestamp order_date = 5;
  google.protobuf.Timestamp requested_date = 6;
  bool completed = 7;
}

message OrderDetails {
  string id = 1;
  string status = 2;
  string taker = 3;
  string purchase_order = 4;
  Address shipping_address = 5;
  Customer customer = 6;
  CustomerContact contact = 7;
  string delivery_instructions = 8;
}

message OrderItem {
  int32 product_uid = 1;
  double quantity_ordered = 2;
  google.protobuf.Timestamp required_date = 3 [deprecated = true];
}

message PageMetadata {
  int32 prev_cursor = 1;
  int32 next_cursor = 2;
}

enum PageDirection {
    PAGE_DIRECTION_UNSPECIFIED = 0;
    PAGE_DIRECTION_NEXT = 1;
    PAGE_DIRECTION_PREVIOUS = 2;
}
message Filters {
  int32 cursor = 1;
  PageDirection direction = 2;
}
service OrderService {
  rpc ListOrdersByCustomerBranch(ListOrdersByCustomerBranchRequest) returns (ListOrdersByCustomerBranchResponse);
  rpc ListOrdersByCustomer(ListOrdersByCustomerRequest) returns (ListOrdersByCustomerResponse);
  rpc ListOrdersByTaker(ListOrdersByTakerRequest) returns (ListOrdersByTakerResponse);
  //GetOrder returns the order details for a given order id
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);

  rpc CreateQuote(CreateQuoteRequest) returns (CreateQuoteResponse);

  rpc GetPickTicketById(GetPickTicketByIdRequest) returns (GetPickTicketByIdResponse);
}

message ListOrdersByCustomerBranchRequest {
  double customer_branch_id = 1;
  Filters filters = 2;
}

message ListOrdersByCustomerBranchResponse {
  repeated BasicOrder orders = 1;
  PageMetadata metadata = 2;
}

message CreateOrderRequest {}
message CreateOrderResponse {}

message ListOrdersByCustomerRequest {
  double customer_id = 1;
  Filters filters = 2;

}

message ListOrdersByCustomerResponse {
  repeated BasicOrder orders = 1;
  PageMetadata metadata = 2;
}

message ListOrdersByTakerRequest {
  string taker = 1;
}

message ListOrdersByTakerResponse {
  repeated BasicOrder orders = 1;
}

message GetOrderRequest {
  string id = 1;
}

message GetOrderResponse {
  message OrderItem {
    int32 product_uid = 8;
    string name = 3;
    string sn = 2;
    string id = 1 [deprecated = true];
    string customer_product_sn =10;

    double quantity_ordered = 4;
    string quantity_unit = 5;
    double cost_per_unit = 6;
    string cost_unit = 9;


    double total_price = 7;
  }

  string id = 1;
  repeated OrderItem order_items = 2;

  string customer_id = 7;
  string customer_name = 8;
  string contact_id = 9;
  string contact_name = 11;

  Address shipping_address = 4;
  string delivery_instructions = 10;
  string taker = 12;
  string purchase_order = 13;

  double sub_total = 15;
  double tax = 16;
  double total = 17;

  google.protobuf.Timestamp date_placed = 14;

  string status = 3 [deprecated = true];
  Customer customer = 5 [deprecated = true];
  CustomerContact contact = 6 [deprecated = true];
}

message CreateQuoteRequest {
  message OrderItem {
    // unique identifier for the product
    int32 product_uid = 1;
    // quantity of the product to be quoted
    double quantity_ordered = 2;
    google.protobuf.Timestamp required_date = 3 [deprecated = true];
  }
  repeated OrderItem order_items = 1;
  // Deprecated: customer_id is pulled from the customer_branch_id
  double customer_id = 2 [deprecated = true];
  // Deprecated: use company_branch_id
  double shipping_address_id= 3 [deprecated = true ];
  // customer accounts contact_id
  string contact_id = 4;
  // date the customer requested the quote to be completed
  google.protobuf.Timestamp requested_date = 5;
  // represents ship_to in prophet and is used as a sub location of a customer record
  double customer_branch_id = 6;
  // instructions pertaining to the delivery of the order
  string delivery_instructions = 7;
  // customer generated purchase order number for this quote
  string purchase_order = 8;

}
message CreateQuoteResponse {
  // id of the created quote
  string id =1;
}

message GetPickTicketByIdRequest {
  double id = 1;
}
message GetPickTicketByIdResponse {
  double id = 1;
  string order_id = 2;
  string order_purchase_order = 3;
  CustomerContact order_contact = 4;
  Address shipping_address = 5;
  string delivery_instructions = 6;
}
